/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package jp.yo41sawada.backend.api;

import jp.yo41sawada.backend.api.model.User;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-05-21T11:16:49.218708+09:00[Asia/Tokyo]")
@Validated
@Tag(name = "Users", description = "the Users API")
public interface UsersApi {

    default UsersApiDelegate getDelegate() {
        return new UsersApiDelegate() {
        };
    }

    /**
     * GET /user/{id} : Your GET endpoint
     * ユーザーを返す。
     *
     * @param id (required)
     * @return OK (status code 200)
     */
    @Operation(
            operationId = "getUser",
            summary = "Your GET endpoint",
            tags = {"users"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = User.class)))
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/user/{id}",
            produces = {"application/json"}
    )
    default ResponseEntity<User> getUser(
            @Parameter(name = "id", description = "", required = true, schema = @Schema(description = "")) @PathVariable("id") Integer id
    ) {
        return getDelegate().getUser(id);
    }


    /**
     * GET /users : Your GET endpoint
     * ユーザーの一覧を返す。
     *
     * @return OK (status code 200)
     */
    @Operation(
            operationId = "getUsers",
            summary = "Your GET endpoint",
            tags = {"users"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = User.class)))
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/users",
            produces = {"application/json"}
    )
    default ResponseEntity<List<User>> getUsers(

    ) {
        return getDelegate().getUsers();
    }

}
